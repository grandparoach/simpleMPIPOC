{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmPrefix": {
      "type": "string",
      "metadata": {
        "description": "Base string for naming resources (max length of 8)"
      },
      "maxLength": 8
    },
    "MasterVMsku": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2"
      ],
      "metadata": {
        "description": "sku to use for the master VM"
      }
    },
    "masterImage": {
      "type": "string",
      "defaultValue": "CentOS_7.7",
      "allowedValues": [
        "CentOS_6.7",
        "CentOS_7.7",
        "RHEL_7.2"
      ],
      "metadata": {
        "description": "The VM image of the master nodes"
      }
    },
    "CompNodeVMsku": {
      "type": "string",
      "defaultValue": "Standard_HC44rs",
      "allowedValues": [
        "Standard_A8",
        "Standard_A9",
        "Standard_H16r",
        "Standard_H16mr",
        "Standard_HC44rs"
      ],
      "metadata": {
        "description": "Instance type to use for the compute nodes"
      }
    },
    "computeNodeImage": {
      "type": "string",
      "defaultValue": "CentOS-HPC_7.7",
      "allowedValues": [
        "CentOS_6.7",
        "CentOS_7.2",
        "CentOS-HPC_7.7",
        "RHEL_7.2"
      ],
      "metadata": {
        "description": "The VM image of the compute nodes"
      }
    },
    "computeNodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances for Compute Node Scaleset (100 or less)."
      },
      "defaultValue": 4,
      "maxValue": 100
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password for the virtual machines"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "The size in GB of each of 16 data disks that are attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    },
    "nbDataDisks": {
      "type": "int",
      "defaultValue": 8,
      "minValue": 2,
      "maxValue": 16,
      "metadata": {
        "description": "The number of disks to attach to the NFS server."
      }
    },
    "MasterStaticIPAddress": {
      "type": "string",
      "defaultValue": "10.1.1.10",
      "metadata": {
        "description": "Static private IP Address for Master node"
      }
    },
    "ComputeNodeStaticIPAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.1",
      "metadata": {
        "description": "The first 3 octets of the Compute Node Static IP Addresses"
      }
    },
    "CNodeStaticIPAddress4thOctetIndex": {
      "type": "int",
      "defaultValue": 11,
      "metadata": {
        "description": "The offset amount for the last octect of the Static IP Addresses"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "namingInfix": "[toLower(substring(concat(parameters('vmPrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('vmPrefix'))]",
    "newStorageAccountSuffix": "[concat(variables('longNamingInfix'), 'sa')]",
    "virtualNetworkName": "grid-vnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "addressPrefix": "10.1.1.0/24",
    "computeSubnetPrefix": "10.1.1.0/25",
    "computeSubnetRef": "[concat(variables('vnetID'),'/subnets/computeSubnet/')]",
    "masterBoxName": "bruce-az00",
    "DiagSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'masterboxsadiag')), 'diag')]",
    "MasterIPConfigName": "[concat(variables('masterBoxName'), 'ipconfig')]",
    "MasterNicName": "[concat(variables('masterBoxName'), 'nic')]",
    "publicIPAddressName": "[concat(variables('masterBoxName'), 'pip')]",
    "publicIPDomainName": "[variables('namingInfix')]",
    "osType": "linux",
    "MasterimageReference": "[variables('computeImages')[parameters('masterImage')]]",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "computeImages": {
      "CentOS_6.7": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "6.7",
        "version": "latest"
      },
      "CentOS_7.2": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.2",
        "version": "latest"
      },
      "CentOS-HPC_7.7": {
        "publisher": "OpenLogic",
        "offer": "CentOS-HPC",
        "sku": "7.7",
        "version": "latest"
      },
      "RHEL_7.2": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest"
      },
      "W2012R2": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      }
    },
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
    "storageAccountType": "Standard_LRS",
    "NodeimageReference": "[variables('computeImages')[parameters('computeNodeImage')]]",
    "dataDiskArray": [
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "0",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "1",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "2",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "3",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "4",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "5",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "6",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "7",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "8",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "9",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "10",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "11",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "12",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "13",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "14",
        "createOption": "Empty"
      },
      {
        "diskSizeGB": "[parameters('datadiskSize')]",
        "lun": "15",
        "createOption": "Empty"
      }
    ],
    "mastervmScripts": {
      "scriptsToDownload": [
        "https://raw.githubusercontent.com/grandparoach/simpleMPIPOC/CDAD/master-setup.sh"
      ],
      "commandToExecute": "bash master-setup.sh"
    },
    "vmScripts": {
      "scriptsToDownload": [
        "https://raw.githubusercontent.com/grandparoach/simpleMPIPOC/CDAD/cn-setup.sh"
      ],
      "commandToExecute": "[concat('bash cn-setup.sh ', variables('masterBoxName'))]"
    },
    "AvailabilitySetSettings": {
      "name": "ComputeNodeAvailabilitySet",
      "faultDomainCount": "3",
      "updateDomainCount": "5"
    }
  },  
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "computeSubnet",
            "properties": {
              "addressPrefix": "[variables('computeSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('DiagSAName')]",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
         "sku": {
            "name": "Aligned"
         },
      "name": "[variables('AvailabilitySetSettings').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[variables('AvailabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('AvailabilitySetSettings').updateDomainCount]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-30",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('MasterNicName')]",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('MasterIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('MasterStaticIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }, 
              "subnet": {
                "id": "[variables('computeSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('masterBoxName')]",
      "location": "[variables('location')]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/networkinterfaces/', variables('MasterNicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('DiagSAName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('MasterVMsku')]"
        },
        "osProfile": {
          "computerName": "[variables('masterBoxName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('MasterimageReference')]",
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
             "managedDisk": {
                "storageAccountType": "Premium_LRS"
             }
          },
          "dataDisks": "[take(variables('dataDiskArray'),parameters('nbDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
               "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('MasterNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
           "storageUri": "[concat('http://',variables('DiagSAName'),'.blob.core.windows.net')]"
          }
        }
      }
    }, 
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterBoxName'), '/ext')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterBoxName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('mastervmScripts').scriptsToDownload]",
          "timestamp": 12
        },
        "protectedSettings": {
          "commandToExecute": "[variables('mastervmScripts').commandToExecute]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), padleft(copyindex(1), 2, '0'))]",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-30",
      "copy": {
        "name": "computeNodePubIPCopy",
        "count": "[parameters('computeNodeCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('bruce-nic-az', padLeft(copyindex(1), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), padleft(copyindex(1), 2, '0'))]"
      ],
      "copy": {
        "name": "computeNodeNicCopy",
        "count": "[parameters('computeNodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "computeNodeIp",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('ComputeNodeStaticIPAddressPrefix'),'.', copyindex(parameters('CNodeStaticIPAddress4thOctetIndex')))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), padleft(copyindex(1), 2, '0')))]"
              }, 
              "subnet": {
                "id": "[variables('computeSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('bruce-az', padLeft(copyindex(1), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [  
        "[concat('Microsoft.Compute/availabilitySets/', variables('AvailabilitySetSettings').name)]",
        "[concat('Microsoft.Network/networkInterfaces/', 'bruce-nic-az', padLeft(copyindex(1), 2, '0'))]"
      ],
      "copy": {
        "name": "computeNodeVmCopy",
        "count": "[parameters('computeNodeCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('CompNodeVMsku')]"
        },
        "osProfile": {
          "computerName": "[concat('bruce-az', padLeft(copyindex(1), 2, '0'))]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('NodeimageReference')]", 
           "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
             "managedDisk": {
                "storageAccountType": "Standard_LRS"
             }
          }
          
          
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('bruce-nic-az', padLeft(copyindex(1), 2, '0')))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('bruce-az', padLeft(copyindex(1), 2, '0'), '/ext')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', 'bruce-az', padLeft(copyindex(1), 2, '0'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterBoxName'),'/extensions/ext')]"
      ],
      "copy": {
        "name": "computeNodeExtensionsCopy",
        "count": "[parameters('computeNodeCount')]"
      },
      "properties": {
         "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('vmScripts').scriptsToDownload]",
          "commandToExecute": "[variables('vmScripts').commandToExecute]"
        }
      }
    }
  ]
}








